openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      summary: index entry point
      parameters: []
      responses:
        '200':
          description: hello message
      tags:
        - Index
  /user:
    post:
      operationId: UserController_create
      summary: Create user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - User
    get:
      operationId: UserController_findAll
      summary: Get all users
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      tags:
        - User
  /user/{id}:
    get:
      operationId: UserController_findOne
      summary: Get user with id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - User
    put:
      operationId: UserController_update
      summary: Update user with id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - User
    delete:
      operationId: UserController_remove
      summary: Delete user with id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - User
  /artist:
    post:
      operationId: ArtistController_create
      summary: Create artist
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArtistDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
      tags:
        - Artist
    get:
      operationId: ArtistController_findAll
      summary: Get all artists
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artist'
      tags:
        - Artist
  /artist/{id}:
    get:
      operationId: ArtistController_findOne
      summary: Get track with id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
      tags:
        - Artist
    put:
      operationId: ArtistController_update
      summary: Update artist with id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArtistDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
      tags:
        - Artist
    delete:
      operationId: ArtistController_remove
      summary: Delete artist with id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Artist
  /track:
    post:
      operationId: TrackController_create
      summary: Create track
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrackDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
      tags:
        - Track
    get:
      operationId: TrackController_findAll
      summary: Get all tracks
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Track'
      tags:
        - Track
  /track/{id}:
    get:
      operationId: TrackController_findOne
      summary: Get track with id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
      tags:
        - Track
    put:
      operationId: TrackController_update
      summary: Update track with id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrackDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
      tags:
        - Track
    delete:
      operationId: TrackController_remove
      summary: Delete track with id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Track
  /album:
    post:
      operationId: AlbumController_create
      summary: Create album
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlbumDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
      tags:
        - Album
    get:
      operationId: AlbumController_findAll
      summary: Get all albums
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
      tags:
        - Album
  /album/{id}:
    get:
      operationId: AlbumController_findOne
      summary: Get album with id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
      tags:
        - Album
    put:
      operationId: AlbumController_update
      summary: Update album with id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlbumDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
      tags:
        - Album
    delete:
      operationId: AlbumController_remove
      summary: Delete track with id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Album
  /favs:
    get:
      operationId: FavsController_findAll
      summary: Get all favourites
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fav'
      tags:
        - Favourites
  /favs/artist/{id}:
    post:
      operationId: FavsController_addFavArtist
      summary: Add artist to favourites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
      tags:
        - Favourites
    delete:
      operationId: FavsController_removeFavArtist
      summary: Remove artist from favourites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Favourites
  /favs/track/{id}:
    post:
      operationId: FavsController_addFavTrack
      summary: Add track to favourites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
      tags:
        - Favourites
    delete:
      operationId: FavsController_removeFavTrack
      summary: Remove track from favourites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Favourites
  /favs/album/{id}:
    post:
      operationId: FavsController_addFavAlbum
      summary: Add album to favourites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
      tags:
        - Favourites
    delete:
      operationId: FavsController_removeFavAlbum
      summary: Remove album from favourites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Favourites
info:
  title: NodeJS2024Q1-Service
  description: 'Home Library Service : Tast7'
  version: 1.0.0
  contact: {}
tags:
  - name: Mamont Studio
    description: ''
servers: []
components:
  schemas:
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      required:
        - login
        - password
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        login:
          type: string
        version:
          type: number
        createdAt:
          type: number
        updatedAt:
          type: number
      required:
        - id
        - login
        - version
        - createdAt
        - updatedAt
    UpdatePasswordDto:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      required:
        - oldPassword
        - newPassword
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
        grammy:
          type: boolean
      required:
        - name
        - grammy
    Artist:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        grammy:
          type: boolean
      required:
        - id
        - name
        - grammy
    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
        grammy:
          type: boolean
      required:
        - name
        - grammy
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
        artistId:
          type: string
          format: uuid
          nullable: true
        albumId:
          type: string
          format: uuid
          nullable: true
        duration:
          type: number
      required:
        - name
        - artistId
        - albumId
        - duration
    Track:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        artistId:
          type: string
          format: uuid
          nullable: true
        albumId:
          type: string
          format: uuid
          nullable: true
        duration:
          type: number
      required:
        - id
        - name
        - artistId
        - albumId
        - duration
    UpdateTrackDto:
      type: object
      properties:
        name:
          type: string
        artistId:
          type: string
          format: uuid
          nullable: true
        albumId:
          type: string
          format: uuid
          nullable: true
        duration:
          type: number
      required:
        - name
        - artistId
        - albumId
        - duration
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
          format: uuid
          nullable: true
      required:
        - name
        - year
        - artistId
    Album:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
          format: uuid
          nullable: true
      required:
        - id
        - name
        - year
        - artistId
    UpdateAlbumDto:
      type: object
      properties:
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
          format: uuid
          nullable: true
      required:
        - name
        - year
        - artistId
    Fav:
      type: object
      properties:
        artists:
          type: array
          items:
            $ref: '#/components/schemas/Artist'
        albums:
          type: array
          items:
            $ref: '#/components/schemas/Album'
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/Track'
      required:
        - artists
        - albums
        - tracks
